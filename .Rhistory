summary(df_clean$taxpc)
hist(df_clean$taxpc,
main="Tax per Capita Across NC Counties",
xlab= "Local and State Tax per Capita (1/100)",
ylab= "Number of Counties",
breaks = 30)
summary(df_clean$pctymle)
hist(df_clean$pctymle,
main= " Percent Males Ages 15-24 across Counties",
xlab= "Percent Males Ages 15-24",
ylab= "Number of Counties",
breaks = 30)
vars <- c("crmrte", "density", "taxpc","pctymle")
suppressWarnings(scatterplotMatrix(df_clean[,vars], diagonal = list(method= "histogram")))
# Build Model 1
model_1 = lm(crmrte ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
plot(model_1, which = 5)
round(sum(model_1$residuals * model_1$fitted.values), 15)
plot(model_1, which = 1)
plot(model_1, which= 2)
vars <- c("polpc", "prbarr", "prbconv","pctmin80")
suppressWarnings(scatterplotMatrix(df_clean[,vars],
diagonal = list(method = "histogram")))
# Build Model 2
model_2 = lm(crmrte ~ density + taxpc + pctymle
+ west + polpc + prbarr + prbconv + pctmin80,
data = df_clean)
summary(model_2)$r.square
plot(model_2, which = 5)
round(sum(model_2$residuals * model_2$fitted.values), 15)
plot(model_2, which= 2)
plot(df_clean$urban , df_clean$density,
main= "Urban Density",
ylab= "Density (100 people per square mile)",
xlab= "Urban")
abline(lm(density ~ urban, data = df_clean))
# Build Model 3
model_3 = lm(crmrte ~ density + taxpc + pctymle
+ west + polpc + prbarr + prbconv + pctmin80
+ central + avgsen + prbpris,
data = df_clean)
summary(model_3)$r.square
plot(model_3, which= 5)
round(sum(model_3$residuals * model_3$fitted.values), 15)
# Build Model 4
# model 4: kitchen sink. urban, wage.
model_4 = lm(crmrte ~ density + taxpc + pctymle
+ west + polpc + prbarr + prbconv + pctmin80
+ central + avgsen + prbpris
+ urban + wcon + wtuc + wtrd + wfir + wser
+ wmfg + wfed + wsta + wloc + mix,
data = df_clean)
summary(model_4)$r.square
plot(model_4, which = 5)
plot(crmrte ~ ftfcrmrte, data = df_clean)
# Build Model 5
model_5 <- lm(ftfcrmrte ~ density + taxpc + pctymle, data=df_clean)
plot(model_5, which = 5)
summary(model_5)$r.squared
stargazer(model_1, model_2, model_3, model_4, model_5, type = "latex",
report = "vc", # Don't report errors, since we haven't covered them
title = "4.6.1 Linear Models Predicting Crime Rate",
keep.stat = c("rsq", "n"),
omit.table.layout = "n") # Omit more output related to errors
crime_v2 <- read.csv("C:/Users/drdcr/w203/stats_lab_3/crime_v2.csv")
View(crime_v2)
View(crime_v2)
install.packages("corrplot")
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
# Import car package
library(car)
library(sandwich)
library(lmtest)
library(corrplot)
layout(matrix(c(1:16), 4, 4, byrow = TRUE))
hist(df$crmrte)
layout(matrix(c(1:16), 4, 4, byrow = TRUE))
plot(df$crmrte)
layout(matrix(c(1,2,3,4,5), 4, 4, byrow = TRUE))
plot(df$crmrte)
hist(df$prbarr)
layout(matrix(c(1,2,3,4,5), 4, 4, byrow = TRUE))
hist(df$crmrte)
hist(df$prbarr)
layout(matrix(c(1,2,3,4), 4, 4, byrow = TRUE))
hist(df$crmrte)
hist(df$prbarr)
layout(matrix(c(1,2,3,4), 4, 4, byrow = TRUE))
hist(df$crmrte)
hist(df$prbarr)
hist(df_clean$crmrte,
main="County Crime Rates in 1987 North Carolina",
xlab= "Crimes Committed per Person",
ylab= "Number of Counties")
hist(log(df_clean$crmrte),
main="County Crime Rates in 1987 North Carolina",
xlab= "Crimes Committed per Person",
ylab= "Number of Counties")
layout(matrix(c(1,2), 2, 1, byrow = TRUE))
hist(df_clean$crmrte,
main="County Crime Rates in 1987 North Carolina",
xlab= "Crimes Committed per Person",
ylab= "Number of Counties")
hist(log(df_clean$crmrte),
main="County Crime Rates in 1987 North Carolina",
xlab= "Log(Crimes Committed per Person)",
ylab= "Number of Counties")
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
hist(df_clean$crmrte,
main="County Crime Rates in 1987 North Carolina",
xlab= "Crimes Committed per Person",
ylab= "Number of Counties")
hist(log(df_clean$crmrte),
main="County Crime Rates in 1987 North Carolina",
xlab= "Log(Crimes Committed per Person)",
ylab= "Number of Counties")
# Calculate the face-to-face crime rate
df_clean$ftfcrmrte <- df_clean$crmrte * (1-1/(df_clean$mix+1))
# Examine the distribution
summary(df_clean$ftfcrmrte)
hist(df_clean$ftfcrmrte,
main="Face-to-Face Crime Rates",
xlab= "Crimes Committed per Person",
ylab= "Number of Counties")
df_clean$crmrte_ratio <- 1-1/(df_clean$mix+1)
hist(df_clean$crmrte_ratio,
main= "County Crime Rates in 1987 North Carolina",
xlab= "Face-to-Face Crimes/Total Crimes",
ylab= "Number of Counties")
# Calculate the face-to-face crime rate
df_clean$ftfcrmrte <- df_clean$crmrte * (1-1/(df_clean$mix+1))
# Examine the distribution
summary(df_clean$ftfcrmrte)
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
hist(df_clean$ftfcrmrte,
main="Face-to-Face Crime Rates",
xlab= "Crimes Committed per Person",
ylab= "Number of Counties")
df_clean$crmrte_ratio <- 1-1/(df_clean$mix+1)
hist(df_clean$crmrte_ratio,
main= "County Crime Rates in 1987 North Carolina",
xlab= "Face-to-Face Crimes/Total Crimes",
ylab= "Number of Counties")
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
hist(df_clean$crmrte,
main="County Crime Rates in 1987 North Carolina",
xlab= "Crimes Committed per Person",
ylab= "Number of Counties")
hist(log(df_clean$crmrte),
xlab= "Log(Crimes Committed per Person)",
ylab= "Number of Counties")
main="County Crime Rates in 1987 North Carolina"
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
hist(df_clean$crmrte,
main="County Crime Rates in 1987 North Carolina",
xlab= "Crimes Committed per Person",
ylab= "Number of Counties")
hist(log(df_clean$crmrte),
xlab= "Log(Crimes Committed per Person)",
ylab= "Number of Counties") +
main="County Crime Rates in 1987 North Carolina"
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
hist(df_clean$crmrte,
main="County Crime Rates in 1987 North Carolina",
xlab= "Crimes Committed per Person",
ylab= "Number of Counties")
hist(log(df_clean$crmrte),
xlab= "Log(Crimes Committed per Person)",
ylab= "Number of Counties") +
main="County Crime Rates in 1987 North Carolina"
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
hist(df_clean$crmrte,
main="County Crime Rates in 1987 North Carolina",
xlab= "Crimes Committed per Person",
ylab= "Number of Counties")
hist(log(df_clean$crmrte),
main="County Crime Rates in 1987 North Carolina",
xlab= "Log(Crimes Committed per Person)",
ylab= "Number of Counties")
m1vars <- df_clean[, c(3,9,10,25)]
cormat1 <- cor(m1vars)
#cormat1
corrplot(cormat1, type = "lower", method = "number",
tl.col = "black", tl.srt = 45)
# Calculate the face-to-face crime rate
df_clean$ftfcrmrte <- df_clean$crmrte * (1-1/(df_clean$mix+1))
# Examine the distribution
summary(df_clean$ftfcrmrte)
# Plot the results
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
hist(df_clean$ftfcrmrte,
main="Face-to-Face Crime",
xlab= "Crimes Committed/Person",
ylab= "Number of Counties")
df_clean$crmrte_ratio <- 1-1/(df_clean$mix+1)
hist(df_clean$crmrte_ratio,
main= "Face-to-Face Crime",
xlab= "F2F Crimes/Total Crimes",
ylab= "Number of Counties")
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
hist(df_clean$crmrte,
main="County Crime Rates",
xlab= "Crimes Committed/Person",
ylab= "Number of Counties")
hist(log(df_clean$crmrte),
main="County Crime Rates",
xlab= "Log(Crimes Committed/Person)",
ylab= "Number of Counties")
# scatterplots of Model 1 variables
attach(df_clean)
layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE))
plot(density, crmrte, main = "Crime Rate by Population Density",
xlab = "Population Density", ylab = "Crime Rate", pch = 19)
abline(lm(crmrte~density))
(plot(taxpc, crmrte, main = "Crime Rate by Tax per Capita",
xlab = "Tax per Capita", ylab = "Crime Rate", pch = 19))
abline(lm(crmrte~taxpc))
plot(pctymle, crmrte, main = "Crime Rate by Percent Young Males",
xlab = "Percent Young Males", ylab = "Crime Rate", pch = 19)
abline(lm(crmrte~pctymle))
# scatterplots of Model 1 variables
attach(df_clean)
layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE))
plot(density, crmrte, main = "Crime Rate by Population Density",
xlab = "Population Density", ylab = "Crime Rate", pch = 19)
abline(lm(crmrte~density))
(plot(taxpc, crmrte, main = "Crime Rate by Tax per Capita",
xlab = "Tax per Capita", ylab = "Crime Rate", pch = 19))
abline(lm(crmrte~taxpc))
plot(pctymle, crmrte, main = "Crime Rate by Percent Young Males",
xlab = "Percent Young Males", ylab = "Crime Rate", pch = 19)
abline(lm(crmrte~pctymle))
# scatterplots of Model 1 variables
attach(df_clean)
layout(matrix(c(1,2,3,4), 1, 3, byrow = TRUE))
plot(density, crmrte, main = "Population Density",
xlab = "Population Density", ylab = "Crime Rate", pch = 19)
abline(lm(crmrte~density))
plot(taxpc, crmrte, main = "Tax per Capita",
xlab = "Tax per Capita", ylab = "Crime Rate", pch = 19)
abline(lm(crmrte~taxpc))
plot(pctymle, crmrte, main = "Percent Young Males",
xlab = "Percent Young Males", ylab = "Crime Rate", pch = 19)
abline(lm(crmrte~pctymle))
# scatterplots of Model 1 variables
attach(df_clean)
layout(matrix(c(1,2,3,4), 1, 3, byrow = TRUE))
plot(density, crmrte, main = "Population Density",
xlab = "Population Density", ylab = "Crime Rate", pch = 19)
abline(lm(crmrte~density))
plot(taxpc, crmrte, main = "Tax per Capita",
xlab = "Tax per Capita", ylab = "Crime Rate", pch = 19)
abline(lm(crmrte~taxpc))
plot(pctymle, crmrte, main = "Percent Young Males",
xlab = "Percent Young Males", ylab = "Crime Rate", pch = 19)
abline(lm(crmrte~pctymle))
# scatterplots of Model 1 variables
attach(df_clean)
layout(matrix(c(1,2,3,4), 1, 3, byrow = TRUE))
plot(density, crmrte, main = "Population Density",
xlab = "Population Density", ylab = "Crime Rate", pch = 19)
abline(lm(crmrte~density))
plot(taxpc, crmrte, main = "Tax per Capita",
xlab = "Tax per Capita", ylab = "Crime Rate", pch = 19)
abline(lm(crmrte~taxpc))
plot(pctymle, crmrte, main = "Percent Young Males",
xlab = "Percent Young Males", ylab = "Crime Rate", pch = 19)
abline(lm(crmrte~pctymle))
# scatterplots of Model 1 variables
attach(df_clean)
layout(matrix(c(1,2,3), 1, 3, byrow = TRUE))
plot(density, crmrte, main = "Population Density",
xlab = "Population Density", ylab = "Crime Rate", pch = 19)
abline(lm(crmrte~density))
plot(taxpc, crmrte, main = "Tax per Capita",
xlab = "Tax per Capita", ylab = "Crime Rate", pch = 19)
abline(lm(crmrte~taxpc))
plot(pctymle, crmrte, main = "Percent Young Males",
xlab = "Percent Young Males", ylab = "Crime Rate", pch = 19)
abline(lm(crmrte~pctymle))
# Build Model 1
model_1 = lm(log(crmrte) ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
plot(model_1, which = 5)
# Build Model 1
model_1 = lm((crmrte) ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
plot(model_1, which = 5)
# Build Model 1
model_1 = lm((crmrte) ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
plot(model_1)
# Build Model 1
model_1 = lm(log(crmrte) ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
plot(model_1)
# Build Model 1
model_1 = lm(crmrte ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
plot(model_1)
model_1_log = lm(log(crmrte) ~ density + taxpc + pctymle, data = df_clean)
summary(model_1_log)$r.square
plot(model_1_log)
# Build Model 1
model_1 = lm(crmrte ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
plot(model_1)
model_1_log = lm(1/(crmrte) ~ density + taxpc + pctymle, data = df_clean)
summary(model_1_log)$r.square
plot(model_1_log)
# Build Model 1
model_1 = lm(crmrte ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
plot(model_1)
model_1_log = lm(sqrt(crmrte) ~ density + taxpc + pctymle, data = df_clean)
summary(model_1_log)$r.square
plot(model_1_log)
# Build Model 1
model_1 = lm(crmrte ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
plot(model_1)
model_1_log = lm(log(crmrte) ~ log(density) + taxpc + pctymle, data = df_clean)
summary(model_1_log)$r.square
plot(model_1_log)
# Build Model 1
model_1 = lm(crmrte ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
plot(model_1)
model_1_log = lm(log(crmrte) ~ density + taxpc + pctymle, data = df_clean)
summary(model_1_log)$r.square
plot(model_1_log)
# Build Model 1
model_1 = lm(crmrte ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
plot(model_1)
summary(model_1)
model_1_log = lm(log(crmrte) ~ density + taxpc + pctymle, data = df_clean)
summary(model_1_log)$r.square
plot(model_1_log)
summary(model_1_log)
# Build Model 1
model_1 = lm(crmrte ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
plot(model_1)
(summary(model_1))
model_1_log = lm(log(crmrte) ~ density + taxpc + pctymle, data = df_clean)
summary(model_1_log)$r.square
plot(model_1_log)
(summary(model_1_log))
# Build Model 1
model_1 = lm(crmrte ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
plot(model_1)
(summary(model_1))
# Build Model 1
model_1_log = lm(log(crmrte) ~ density + taxpc + pctymle, data = df_clean)
summary(model_1_log)$r.square
plot(model_1_log)
(summary(model_1_log))
# Build Model 1
model_1 = lm(crmrte ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
plot(model_1)
(summary(model_1))
plot(model_1, which= 2)
# Build Model 1
model_1 = lm(crmrte ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
plot(model_1, which = 5)
plot(model_1, which = 2)
plot(model_1, which = 3)
plot(model_1, which = 1)
plot(model_1, which = 3)
plot(model_1, which = 1)
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
plot(model_1, which= 2,
main = "crmrte")
plot(model_1_log, which = 2,
main = "log(crmrte)")
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
plot(model_1, which= 2,
caption = "", main = "crmrte")
plot(model_1_log, which = 2,
caption = "", main = "log(crmrte)")
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
plot(model_1, which= 2,
caption = "", main = "Model 1")
plot(model_1_log, which = 2,
caption = "", main = "Model 1 (log)")
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
plot(model_1, which= 3,
caption = "", main = "Model 1")
plot(model_1_log, which = 3,
caption = "", main = "Model 1 (log)")
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
plot(model_1, which= 1,
caption = "", main = "Model 1")
plot(model_1_log, which = 1,
caption = "", main = "Model 1 (log)")
# Build Model 1
model_1 = lm(crmrte ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
model_1_log = lm(log(crmrte) ~ density + taxpc + pctymle, data = df_clean)
summary(model_1_log)$r.square
plot(model_1_log, which = 5)
# Build Model 1
model_1 = lm(crmrte ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
model_1_log = lm(log(crmrte) ~ density + taxpc + pctymle, data = df_clean)
summary(model_1_log)$r.square
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
plot(model_1, which= 5,
caption = "", main = "Model 1")
plot(model_1_log, which = 5,
caption = "", main = "Model 1 (log)")
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
plot(model_1, which= 1,
caption = "", main = "Model 1")
plot(model_1_log, which = 1,
caption = "", main = "Model 1 (log)")
# Build Model 1
model_1_log = lm(log(crmrte) ~ density + taxpc + pctymle, data = df_clean)
summary(model_1_log)$r.square
plot(model_1_log)
(summary(model_1_log))
coeftest(model_1, vcov = vcovHC)
vars <- c("polpc", "prbarr", "prbconv","pctmin80")
suppressWarnings(scatterplotMatrix(df_clean[,vars],
diagonal = list(method = "histogram")))
vars <- c("polpc", "prbarr", "prbconv","pctmin80")
suppressWarnings(scatterplotMatrix(df_clean[,vars],
diagonal = list(method = "histogram")))
# Build Model 1
model_1 = lm(crmrte ~ density + taxpc + pctymle, data = df_clean)
summary(model_1)$r.square
model_1_log = lm(log(crmrte) ~ density + taxpc + pctymle, data = df_clean)
summary(model_1_log)$r.square
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
plot(model_1, which= 5,
caption = "", main = "Model 1")
plot(model_1_log, which = 5,
caption = "", main = "Model 1 (log)")
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
plot(model_1, which= 1,
caption = "", main = "Model 1")
plot(model_1_log, which = 1,
caption = "", main = "Model 1 (log)")
plot(model_2, which = 1)
plot(model_2, which = 1)
plot(model_2, which= 2)
coeftest(model_2, vcov = vcovHC)
# Build Model 3
model_3 = lm(crmrte ~ density + taxpc + pctymle
+ west + polpc + prbarr + prbconv + pctmin80
+ central + avgsen + prbpris,
data = df_clean)
summary(model_3)$r.square
plot(model_3, which= 5)
restricted_model <- lm(crmrte ~ density + pctymle + polpc
+ prbarr + prbconv + pctmin80, data = df_clean)
waldtest(model_4, restricted_model, vcov=vcovHC)
plot(crmrte ~ ftfcrmrte, data = df_clean)
coeftest(model_5, vcov=vcovHC)
stargazer(df)
summary(df$crmrte)
stargazer(df)
summary(df$crmrte)
stargazer(df[,3:])
View(df)
stargazer(df[,3:18])
summary(df$crmrte)
stargazer(df[,3:18], title = "Variable Distribution Summaries")
stargazer(df[,3:23], title = "Variable Distribution Summaries")
stargazer(df[,3:24], title = "Variable Distribution Summaries")
stargazer(df[,3:26], title = "Variable Distribution Summaries")
stargazer(df[,3:25], title = "Variable Distribution Summaries")
stargazer(df[,3:25], as.numeric(df$prbconv) title = "Variable Distribution Summaries")
stargazer(df[,3:25], as.numeric(df$prbconv), title = "Variable Distribution Summaries")
summary(df$crmrte)
summary(as.numeric(levels(df$prbconv)[df$prbconv])
summary(as.numeric(levels(df$prbconv)[df$prbconv]))
df_calc$prbconv <- as.numeric(levels(df$prbconv)[df$prbconv])
stargazer(df[,3:25], df_calc$prbconv, title = "Variable Distribution Summaries")
# Clean the data
## Reassign the dataframe to a working variable
df_calc <- df
# Convert the prbarr, prbpris, and pctymle variables from decimals to percentages
df_calc$prbarr <- df$prbarr * 100
df_calc$prbpris <- df$prbpris * 100
df_calc$pctymle <- df$pctymle * 100
# Convert the mix variable from decimals to percentage
df_calc$mix <- df$mix * 100
# Convert the polpc variable from decimals to number of police per 1000 people
df_calc$polpc <- df$polpc * 1000
# Convert the prbconv variable from integer to numeric
df_calc$prbconv <- as.numeric(levels(df$prbconv)[df$prbconv])
#remove row 89, which is a duplicate of row 88 (Madison County, FIPS 193)
df_clean <- df_calc[-c(89), ]
#remove rows with no data (i.e., all NA values)
df_clean <- df_clean[-c(91:97), ]
stargazer(df_clean[,3:25], title = "Table 2.1-1. Variable Distribution Summaries")
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
# Import car package
library(car)
library(sandwich)
library(lmtest)
library(corrplot)
# Build Model 5
model_5 <- lm(ftfcrmrte ~ density + taxpc + pctymle, data=df_clean)
