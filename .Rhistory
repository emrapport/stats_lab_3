knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
# Import car package
library(car)
# Import the data
df = read.csv("crime_v2.csv")
#summary(df)
# Clean the data
## NOTE FROM ALLA: This is just what I did to clean the data.  I am sure this can be done in a more efficient way.  Please just let me know what the final df is called so that I can update it in my models.
df_calc <- df
df_calc$prbconv <- as.numeric(as.numeric(df$prbconv))
df_calc$prbarr <- df$prbarr * 100
df_calc$prbpris <- df$prbpris * 100
df_calc$pctymle <- df$pctymle * 100
#(df_calc$county)
#summary(df_calc)
df_clean <-df_calc[with(df_calc, prbarr <= 100 & wser <= 2000),]
summary(df_clean$crmrte)
df_clean <- df_clean[complete.cases(df_clean$crmrte), ]
hist(df_clean$crmrte,
main="Crime Rate for Individual Counties",
xlab= "Crime Rate",
ylab= "Number of Counties")
summary(df_clean$density)
hist(df_clean$density,
main="Densities for Individual Counties",
xlab= "Density",
ylab= "Number of Counties",
breaks = 30)
summary(df_clean$taxpc)
hist(df_clean$taxpc,
main="Tax for Individual Counties",
xlab= "Tax per Capita",
ylab= "Number of Counties",
breaks = 30)
summary(df_clean$pctymle)
hist(df_clean$pctymle,
main="Young Males for Individual Counties",
xlab= "Percent Young Males",
ylab= "Number of Counties",
breaks = 30)
vars <- c("crmrte", "density", "taxpc","pctymle")
suppressWarnings(scatterplotMatrix(df_clean[,vars], diagonal = "histogram"))
# Build Model 1
(model_1 = lm(crmrte ~ density + taxpc + log(pctymle), data = df_clean))
summary(model_1)$r.square
plot(model_1, which = 5)
round(sum(model_1$residuals * model_1$fitted.values), 15)
vars <- c("west", "polpc", "prbarr", "prbconv","pctmin80")
suppressWarnings(scatterplotMatrix(df_clean[,vars], diag = "histogram"))
# Build Model 2
(model_2 = lm(crmrte ~ density + taxpc + log(pctymle)
+ west + log(polpc) + prbarr + prbconv + pctmin80,
data = df_clean))
summary(model_2)$r.square
plot(model_2, which = 5)
round(sum(model_2$residuals * model_2$fitted.values), 15)
plot(df_clean$urban , df_clean$density,
main= "Urban Density",
ylab= "Density (100 people per square mile)",
xlab= "Urban")
# Build Model 3
(model_3 = lm(crmrte ~ density + taxpc + pctymle + west + log(polpc) + prbarr + prbconv + pctmin80 + central + avgsen + prbpris, data = df_clean))
summary(model_3)$r.square
plot(model_3, which = 5)
# Build Model 4
model_4 = lm(crmrte ~ density + taxpc + pctymle + west + log(polpc) + prbarr + prbconv + pctmin80 + central + avgsen + prbpris + urban + wcon + wtuc + wtrd + wfir + wser + wmfg + wfed + wsta + wloc, data = df_clean)
paste("The R.square is", round(summary(model_4)$r.square, 2))
plot(model_4, which = 5)
# Build Model 5
# model 5: the model 1 version of a model for this dependent variable - crmrate*mix
stargazer(model_1, model_2, model_3, model_4, type = "latex",
report = "vc", # Don't report errors, since we haven't covered them
title = "Linear Models Predicting Crime Rate",
keep.stat = c("rsq", "n"),
omit.table.layout = "n") # Omit more output related to errors
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
# Import car package
library(car)
# Import the data
df = read.csv("crime_v2.csv")
#summary(df)
# Clean the data
## NOTE FROM ALLA: This is just what I did to clean the data.  I am sure this can be done in a more efficient way.  Please just let me know what the final df is called so that I can update it in my models.
df_calc <- df
df_calc$prbconv <- as.numeric(as.numeric(df$prbconv))
df_calc$prbarr <- df$prbarr * 100
df_calc$prbpris <- df$prbpris * 100
df_calc$pctymle <- df$pctymle * 100
#(df_calc$county)
#summary(df_calc)
df_clean <-df_calc[with(df_calc, prbarr <= 100 & wser <= 2000),]
summary(df_clean$crmrte)
df_clean <- df_clean[complete.cases(df_clean$crmrte), ]
hist(df_clean$crmrte,
main="Crime Rate for Individual Counties",
xlab= "Crime Rate",
ylab= "Number of Counties")
summary(df_clean$density)
hist(df_clean$density,
main="Densities for Individual Counties",
xlab= "Density",
ylab= "Number of Counties",
breaks = 30)
summary(df_clean$taxpc)
hist(df_clean$taxpc,
main="Tax for Individual Counties",
xlab= "Tax per Capita",
ylab= "Number of Counties",
breaks = 30)
summary(df_clean$pctymle)
hist(df_clean$pctymle,
main="Young Males for Individual Counties",
xlab= "Percent Young Males",
ylab= "Number of Counties",
breaks = 30)
vars <- c("crmrte", "density", "taxpc","pctymle")
suppressWarnings(scatterplotMatrix(df_clean[,vars], diagonal = "histogram"))
# Build Model 1
(model_1 = lm(crmrte ~ density + taxpc + log(pctymle), data = df_clean))
summary(model_1)$r.square
plot(model_1, which = 5)
round(sum(model_1$residuals * model_1$fitted.values), 15)
vars <- c("west", "polpc", "prbarr", "prbconv","pctmin80")
suppressWarnings(scatterplotMatrix(df_clean[,vars], diag = "histogram"))
# Build Model 2
(model_2 = lm(crmrte ~ density + taxpc + log(pctymle)
+ west + log(polpc) + prbarr + prbconv + pctmin80,
data = df_clean))
summary(model_2)$r.square
plot(model_2, which = 5)
round(sum(model_2$residuals * model_2$fitted.values), 15)
plot(df_clean$urban , df_clean$density,
main= "Urban Density",
ylab= "Density (100 people per square mile)",
xlab= "Urban")
# Build Model 3
(model_3 = lm(crmrte ~ density + taxpc + pctymle + west + log(polpc) + prbarr + prbconv + pctmin80 + central + avgsen + prbpris, data = df_clean))
summary(model_3)$r.square
plot(model_3, which = 5)
# Build Model 4
model_4 = lm(crmrte ~ density + taxpc + pctymle + west + log(polpc) + prbarr + prbconv + pctmin80 + central + avgsen + prbpris + urban + wcon + wtuc + wtrd + wfir + wser + wmfg + wfed + wsta + wloc, data = df_clean)
paste("The R.square is", round(summary(model_4)$r.square, 2))
plot(model_4, which = 5)
# Build Model 5
# model 5: the model 1 version of a model for this dependent variable - crmrate*mix
stargazer(model_1, model_2, model_3, model_4, type = "latex",
report = "vc", # Don't report errors, since we haven't covered them
title = "Linear Models Predicting Crime Rate",
keep.stat = c("rsq", "n"),
omit.table.layout = "n") # Omit more output related to errors
stargazer(model_1, model_2, model_3, model_4, type = "latex",
report = "vc", # Don't report errors, since we haven't covered them
title = "Linear Models Predicting Crime Rate",
keep.stat = c("rsq", "n"),
omit.table.layout = "n") # Omit more output related to errors
